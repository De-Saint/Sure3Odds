{"version":3,"sources":["../../src/pages/predictions/predictions.module.ts","../../src/pages/predictions/predictions.ts"],"names":[],"mappings":"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","file":"40.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { PredictionsPage } from './predictions';\n\n@NgModule({\n  declarations: [\n    PredictionsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(PredictionsPage),\n  ],\n})\nexport class PredictionsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/predictions/predictions.module.ts","import { GamesProvider } from './../../providers/games/games';\nimport { AuthenicationProvider } from './../../providers/authenication/authenication';\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ActionSheetController, LoadingController, AlertController } from 'ionic-angular';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-predictions',\n  templateUrl: 'predictions.html',\n})\nexport class PredictionsPage {\n  predictionlist: any;\n  error:any;\n  constructor(public navCtrl: NavController,\n    private authProvider: AuthenicationProvider,\n    private gamesProvider: GamesProvider,\n    private alertCtrl: AlertController,\n    private loadingCtrl: LoadingController,\n    private actionSheetCtrl: ActionSheetController,\n    public navParams: NavParams) {\n  }\n  ionViewWillEnter() {\n    const currentdate = this.gamesProvider.getDate();\n    this.GetPredictions(currentdate);\n  }\n\n  GetPredictions(currentdate) {\n    this.gamesProvider.GetPredictions(currentdate)\n      .subscribe(resp => {\n        if (resp.statusCode === 200) {\n          this.predictionlist = resp.data;\n          console.log(this.predictionlist);\n        } else {\n          this.authProvider.showToast(resp.description);\n        }\n        this.error = '';\n      }, error => {\n        this.error = error.error.description;\n      });\n  }\n\n  onGameOption(prediction) {\n    const usertype = this.authProvider.currentUserDataValue.user_type;\n    if (usertype === \"Admin\") {\n      this.AdminActionSheet(prediction);\n    } else if (usertype === \"SubAdmin\") {\n      this.SubAdminActionSheet(prediction);\n    }\n\n  }\n  SubAdminActionSheet(prediction) {\n    let subAdminActionSheet = this.actionSheetCtrl.create({\n      title: 'Prediction Options',\n      buttons: [\n        {\n          text: 'View / Edit',\n          handler: () => { this.navCtrl.push('PredictionEditPage', { prediction }) }\n        }, {\n          text: 'Delete',\n          handler: () => { this.onDeletePrediction(prediction) }\n        }, {\n          text: 'Cancel',\n          role: 'cancel',\n          handler: () => { }\n        }\n      ]\n    });\n    subAdminActionSheet.present();\n  }\n  AdminActionSheet(prediction) {\n    let adminActionSheet = this.actionSheetCtrl.create({\n      title: 'Prediction Options',\n      buttons: [\n        {\n          text: 'View / Edit',\n          handler: () => { this.navCtrl.push('PredictionEditPage', { prediction }) }\n        }, {\n          text: 'Approve',\n          handler: () => { this.navCtrl.push('GameCreatePage', { prediction }) }\n        }, {\n          text: 'Delete',\n          handler: () => { this.onDeletePrediction(prediction) }\n        }, {\n          text: 'Cancel',\n          role: 'cancel',\n          handler: () => { }\n        }\n      ]\n    });\n    adminActionSheet.present();\n  }\n  onDeletePrediction(game) {\n    let loading = this.loadingCtrl.create({\n      content: \"Please wait...\"\n    });\n    let confirm = this.alertCtrl.create({\n      title: 'Delete Prediction',\n      message: 'Do you want to delete this prediction?<br/><br/>This is action is irreversible.',\n      buttons: [\n        {\n          text: 'Cancel',\n          handler: () => {\n\n          }\n        },\n        {\n          text: 'Proceed',\n          handler: () => {\n            loading.present();\n            this.gamesProvider.deletePrediction(game.id).subscribe(res => {\n              loading.dismiss().catch(() => { });\n              if (res.statusCode === 200) {\n                const currentdate = this.gamesProvider.getDate();\n                this.GetPredictions(currentdate);\n              } else {\n                this.authProvider.showToast(res.description);\n              }\n            }, error => {\n              loading.dismiss().catch(() => { });\n\n              this.authProvider.showToast(error.error.description);\n            });\n          }\n        }\n      ]\n    });\n    confirm.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/predictions/predictions.ts"],"sourceRoot":""}