{"version":3,"sources":["../../src/pages/android-subscription/android-subscription.module.ts","../../src/pages/android-subscription/android-subscription.ts","../../node_modules/angular4-paystack/fesm5/angular4-paystack.js"],"names":[],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,gEAAS;AACzB;AACA,mGAAmG,MAAM;AACzG,iBAAiB;AACjB;AACA;AACA,4DAA4D,WAAW;AACvE;AACA,gBAAgB,OAAO,4DAAK,EAAE;AAC9B,eAAe,OAAO,4DAAK,EAAE;AAC7B,iBAAiB,OAAO,4DAAK,EAAE;AAC/B,kBAAkB,OAAO,4DAAK,EAAE;AAChC,oBAAoB,OAAO,4DAAK,EAAE;AAClC,eAAe,OAAO,4DAAK,EAAE;AAC7B,oBAAoB,OAAO,4DAAK,EAAE;AAClC,gBAAgB,OAAO,4DAAK,EAAE;AAC9B,oBAAoB,OAAO,4DAAK,EAAE;AAClC,oBAAoB,OAAO,4DAAK,EAAE;AAClC,sBAAsB,OAAO,4DAAK,EAAE;AACpC,8BAA8B,OAAO,4DAAK,EAAE;AAC5C,kBAAkB,OAAO,4DAAK,EAAE;AAChC,iBAAiB,OAAO,4DAAK,EAAE;AAC/B,iBAAiB,OAAO,4DAAK,EAAE;AAC/B,uBAAuB,OAAO,6DAAM,EAAE;AACtC,iBAAiB,OAAO,6DAAM,EAAE;AAChC,oBAAoB,OAAO,6DAAM,EAAE;AACnC;AACA;AACA,CAAC;AACD;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,yBAAyB,mEAAY;AACrC,4BAA4B,mEAAY;AACxC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,gEAAS;AACxB,mBAAmB,kEAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS,OAAO,gEAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,4DAA4D,WAAW;AACvE;AACA,gBAAgB,OAAO,4DAAK,EAAE;AAC9B,eAAe,OAAO,4DAAK,EAAE;AAC7B,iBAAiB,OAAO,4DAAK,EAAE;AAC/B,kBAAkB,OAAO,4DAAK,EAAE;AAChC,oBAAoB,OAAO,4DAAK,EAAE;AAClC,eAAe,OAAO,4DAAK,EAAE;AAC7B,oBAAoB,OAAO,4DAAK,EAAE;AAClC,gBAAgB,OAAO,4DAAK,EAAE;AAC9B,oBAAoB,OAAO,4DAAK,EAAE;AAClC,sBAAsB,OAAO,4DAAK,EAAE;AACpC,oBAAoB,OAAO,4DAAK,EAAE;AAClC,8BAA8B,OAAO,4DAAK,EAAE;AAC5C,kBAAkB,OAAO,4DAAK,EAAE;AAChC,iBAAiB,OAAO,4DAAK,EAAE;AAC/B,iBAAiB,OAAO,4DAAK,EAAE;AAC/B,iBAAiB,OAAO,6DAAM,EAAE;AAChC,oBAAoB,OAAO,6DAAM,EAAE;AACnC,uBAAuB,OAAO,mEAAY,oBAAoB;AAC9D;AACA;AACA,CAAC;AACD;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,+BAA+B,mEAAY;AAC3C,yBAAyB,mEAAY;AACrC,4BAA4B,mEAAY;AACxC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,4BAA4B,iCAAiC,EAAE;AAC/D;AACA,wBAAwB;AACxB;AACA,yBAAyB,0CAA0C,EAAE;AACrE;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,gEAAS;AACxB,mBAAmB,kEAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS,OAAO,gEAAS;AACzB;AACA,qCAAqC,8EAAuB;AAC5D;AACA,iBAAiB;AACjB;AACA;AACA,wDAAwD,WAAW;AACnE;AACA,gBAAgB,OAAO,4DAAK,EAAE;AAC9B,eAAe,OAAO,4DAAK,EAAE;AAC7B,iBAAiB,OAAO,4DAAK,EAAE;AAC/B,kBAAkB,OAAO,4DAAK,EAAE;AAChC,oBAAoB,OAAO,4DAAK,EAAE;AAClC,oBAAoB,OAAO,4DAAK,EAAE;AAClC,eAAe,OAAO,4DAAK,EAAE;AAC7B,oBAAoB,OAAO,4DAAK,EAAE;AAClC,gBAAgB,OAAO,4DAAK,EAAE;AAC9B,oBAAoB,OAAO,4DAAK,EAAE;AAClC,sBAAsB,OAAO,4DAAK,EAAE;AACpC,8BAA8B,OAAO,4DAAK,EAAE;AAC5C,kBAAkB,OAAO,4DAAK,EAAE;AAChC,uBAAuB,OAAO,6DAAM,EAAE;AACtC,iBAAiB,OAAO,6DAAM,EAAE;AAChC,oBAAoB,OAAO,6DAAM,EAAE;AACnC;AACA;AACA,CAAC;AACD;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,+DAAQ;AACxB,8BAA8B,qEAAY;AAC1C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE+G;AAC/G","file":"1.js","sourcesContent":["import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AndroidSubscriptionPage } from './android-subscription';\nimport { Angular4PaystackModule } from 'angular4-paystack';\n\n@NgModule({\n  declarations: [\n    AndroidSubscriptionPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AndroidSubscriptionPage),\n    Angular4PaystackModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]\n})\nexport class AndroidSubscriptionPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/android-subscription/android-subscription.module.ts","import { NewUser, AuthenicationProvider } from './../../providers/authenication/authenication';\nimport { Component, OnInit } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController } from 'ionic-angular';\n\n@IonicPage()\n@Component({\n  selector: 'page-android-subscription',\n  templateUrl: 'android-subscription.html',\n})\nexport class AndroidSubscriptionPage implements OnInit {\n  newuser: NewUser = new NewUser(\"\", \"\", \"\", \"\", \"\", \"\", \"\", {id:\"\"}, \"\");\n  plantypes: any;\n  plantypelist: any;\n  public public_key = 'pk_test_b3685f824518679567d6356e2636fc184878e833'; //Put your paystack Test or Live Key here\n  public channels = ['card']; //Paystack Payment Methods\n  public random_id = Math.floor(Date.now() / 1000); //Line to generate reference number\n\n  pay_amount: any;\n  constructor(public loadingCtrl: LoadingController,\n    public navCtrl: NavController, public auth: AuthenicationProvider, public navParams: NavParams) {\n    this.newuser = navParams.get(\"newuser\");\n    console.log(this.newuser);\n  }\n\n  ionViewDidLoad() {\n\n  }\n  ngOnInit(): void {\n    this.getPlantypes();\n  }\n\n\n  onPlantTypeSelect($event, plan) {\n    this.pay_amount = plan.amount;\n\n  }\n  getPlantypes() {\n    this.auth.getAllPlantypes().subscribe(result => {\n      this.plantypes = result;\n      this.plantypelist = this.plantypes.data;\n      console.log(this.plantypelist);\n    })\n  }\n\n  onPay(pay_amount) {\n    this.auth.showToast(\"Please Wait ...\");\n    this.pay_amount = this.CalculatePercentage(pay_amount);\n  }\n  paymentInit() {\n\n  }\n\n  CalculatePercentage(userAmt) {\n    let addedPerc = (parseInt(userAmt) * 0.02);\n    let newAmt = parseInt(userAmt) + addedPerc;\n    if (parseInt(userAmt) >= 2500) {\n      newAmt = parseInt(userAmt) + 100;\n    }\n    return newAmt;\n  }\n\n  //Callback function on successful payment\n  paymentDone(ref: any) {\n    if (ref.status === \"success\") {\n      console.log(ref) //ref contains the response from paystack after successful payment\n      let loading = this.loadingCtrl.create({\n        content: 'Please wait...'\n      });\n      loading.present();\n      this.newuser.platform = \"Android\";\n      this.newuser.referencecode = String(ref.reference);\n      console.log(this.newuser); \n      this.auth.createNewUser(this.newuser).subscribe(result => {\n        // this.plantypes = result;\n        loading.dismiss().catch(() => { });\n        // this.plantypelist = this.plantypes.data;\n        console.log(result);\n      }, err => {\n          loading.dismiss().catch(() => { });\n          console.log(JSON.stringify(err))\n          // this.auth.showToast(JSON.stringify(err))\n        })\n    } else {\n      this.auth.showToast(\"Please, the payment was not successful.\");\n    }\n\n  }\n  //Event triggered if User cancel the payment\n  paymentCancel() {\n    this.auth.showToast(\"You cancelled the payment!\");\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/android-subscription/android-subscription.ts","import { __awaiter, __generator } from 'tslib';\nimport { EventEmitter, Component, Input, Output, Directive, HostListener, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction MyWindow() { }\nif (false) {\n    /** @type {?} */\n    MyWindow.prototype.PaystackPop;\n}\nvar Angular4PaystackComponent = /** @class */ (function () {\n    function Angular4PaystackComponent() {\n        this.paymentInit = new EventEmitter();\n        this.close = new EventEmitter();\n        this.callback = new EventEmitter();\n        this.isPaying = false;\n    }\n    /**\n     * @return {?}\n     */\n    Angular4PaystackComponent.prototype.pay = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var payment;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.checkInput()) {\n                            return [2 /*return*/];\n                        }\n                        return [4 /*yield*/, this.loadScript()];\n                    case 1:\n                        _a.sent();\n                        this.setUp();\n                        if (this.isPaying) {\n                            return [2 /*return*/];\n                        }\n                        if (this.paymentInit.observers.length) {\n                            this.paymentInit.emit();\n                        }\n                        payment = window.PaystackPop.setup(this.paystackOptions);\n                        payment.openIframe();\n                        this.isPaying = true;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    Angular4PaystackComponent.prototype.checkInput = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.key) {\n            return console.error('ANGULAR-PAYSTACK: Paystack key cannot be empty');\n        }\n        if (!this.email) {\n            return console.error('ANGULAR-PAYSTACK: Paystack email cannot be empty');\n        }\n        if (!this.amount) {\n            return console.error('ANGULAR-PAYSTACK: Paystack amount cannot be empty');\n        }\n        if (!this.ref) {\n            return console.error('ANGULAR-PAYSTACK: Paystack ref cannot be empty');\n        }\n        if (!this.callback.observers.length) {\n            return console.error(\"ANGULAR-PAYSTACK: Insert a callback output like so (callback)='PaymentComplete($event)' to check payment status\");\n        }\n        return true;\n    };\n    /**\n     * @return {?}\n     */\n    Angular4PaystackComponent.prototype.setUp = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.paystackOptions = {\n            key: this.key,\n            email: this.email,\n            amount: this.amount,\n            ref: this.ref,\n            metadata: this.metadata || {},\n            currency: this.currency || 'NGN',\n            plan: this.plan || '',\n            channels: this.channels,\n            quantity: this.quantity || '',\n            subaccount: this.subaccount || '',\n            transaction_charge: this.transaction_charge || 0,\n            bearer: this.bearer || '',\n            callback: (/**\n             * @param {?} res\n             * @return {?}\n             */\n            function (res) {\n                _this.isPaying = false;\n                _this.callback.emit(res);\n            }),\n            onClose: (/**\n             * @return {?}\n             */\n            function () {\n                _this.isPaying = false;\n                _this.close.emit();\n            }),\n        };\n    };\n    /**\n     * @return {?}\n     */\n    Angular4PaystackComponent.prototype.loadScript = /**\n     * @return {?}\n     */\n    function () {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        function (resolve) {\n            if (window.PaystackPop && typeof window.PaystackPop.setup === 'function') {\n                resolve();\n                return;\n            }\n            /** @type {?} */\n            var script = window.document.createElement('script');\n            window.document.head.appendChild(script);\n            /** @type {?} */\n            var onLoadFunc = (/**\n             * @return {?}\n             */\n            function () {\n                script.removeEventListener('load', onLoadFunc);\n                resolve();\n            });\n            script.addEventListener('load', onLoadFunc);\n            script.setAttribute('src', 'https://js.paystack.co/v1/inline.js');\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    Angular4PaystackComponent.prototype.ngOnChanges = /**\n     * @return {?}\n     */\n    function () {\n        this.setUp();\n    };\n    /**\n     * @return {?}\n     */\n    Angular4PaystackComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        if (this.text) {\n            console.error('Paystack Text input is deprecated. Add text into textnode like so <angular4-paystack>Pay With Paystack</angular4-paystack>');\n        }\n    };\n    Angular4PaystackComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'angular4-paystack',\n                    template: \"<button [ngClass]=\\\"class\\\" [ngStyle]=\\\"style\\\" (click)=\\\"pay()\\\">{{text}}<ng-content></ng-content></button>\"\n                }] }\n    ];\n    /** @nocollapse */\n    Angular4PaystackComponent.ctorParameters = function () { return []; };\n    Angular4PaystackComponent.propDecorators = {\n        text: [{ type: Input }],\n        key: [{ type: Input }],\n        email: [{ type: Input }],\n        amount: [{ type: Input }],\n        metadata: [{ type: Input }],\n        ref: [{ type: Input }],\n        currency: [{ type: Input }],\n        plan: [{ type: Input }],\n        quantity: [{ type: Input }],\n        channels: [{ type: Input }],\n        subaccount: [{ type: Input }],\n        transaction_charge: [{ type: Input }],\n        bearer: [{ type: Input }],\n        class: [{ type: Input }],\n        style: [{ type: Input }],\n        paymentInit: [{ type: Output }],\n        close: [{ type: Output }],\n        callback: [{ type: Output }]\n    };\n    return Angular4PaystackComponent;\n}());\nif (false) {\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.text;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.key;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.email;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.amount;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.metadata;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.ref;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.currency;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.plan;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.quantity;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.channels;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.subaccount;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.transaction_charge;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.bearer;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.class;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.style;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.paymentInit;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.close;\n    /** @type {?} */\n    Angular4PaystackComponent.prototype.callback;\n    /**\n     * @type {?}\n     * @private\n     */\n    Angular4PaystackComponent.prototype.paystackOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    Angular4PaystackComponent.prototype.isPaying;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction MyWindow$1() { }\nif (false) {\n    /** @type {?} */\n    MyWindow$1.prototype.PaystackPop;\n}\nvar Angular4PaystackDirective = /** @class */ (function () {\n    function Angular4PaystackDirective() {\n        this.close = new EventEmitter();\n        this.callback = new EventEmitter();\n        this.isPaying = false;\n        this.setUp();\n    }\n    /**\n     * @return {?}\n     */\n    Angular4PaystackDirective.prototype.pay = /**\n     * @return {?}\n     */\n    function () {\n        this.setUp();\n        if (!this.checkInput()) {\n            return;\n        }\n        /** @type {?} */\n        var payment = window.PaystackPop.setup(this.paystackOptions);\n        payment.openIframe();\n        this.isPaying = true;\n    };\n    /**\n     * @return {?}\n     */\n    Angular4PaystackDirective.prototype.checkInput = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.key) {\n            return console.error('ANGULAR-PAYSTACK: Paystack key cannot be empty');\n        }\n        if (!this.email) {\n            return console.error('ANGULAR-PAYSTACK: Paystack email cannot be empty');\n        }\n        if (!this.amount) {\n            return console.error('ANGULAR-PAYSTACK: Paystack amount cannot be empty');\n        }\n        if (!this.ref) {\n            return console.error('ANGULAR-PAYSTACK: Paystack ref cannot be empty');\n        }\n        if (!this.callback.observers.length) {\n            return console.error(\"ANGULAR-PAYSTACK: Insert a callback output like so (callback)='PaymentComplete($event)' to check payment status\");\n        }\n        return true;\n    };\n    /**\n     * @return {?}\n     */\n    Angular4PaystackDirective.prototype.setUp = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.paystackOptions = {\n            key: this.key,\n            email: this.email,\n            amount: this.amount,\n            ref: this.ref,\n            metadata: this.metadata || {},\n            currency: this.currency || 'NGN',\n            plan: this.plan || '',\n            quantity: this.quantity || '',\n            subaccount: this.subaccount || '',\n            channels: this.channels,\n            transaction_charge: this.transaction_charge || 0,\n            bearer: this.bearer || '',\n            callback: (/**\n             * @param {?} res\n             * @return {?}\n             */\n            function (res) {\n                _this.isPaying = false;\n                _this.callback.emit(res);\n            }),\n            onClose: (/**\n             * @return {?}\n             */\n            function () {\n                _this.isPaying = false;\n                _this.close.emit();\n            })\n        };\n    };\n    /**\n     * @return {?}\n     */\n    Angular4PaystackDirective.prototype.loadScript = /**\n     * @return {?}\n     */\n    function () {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        function (resolve) {\n            if (window.PaystackPop && typeof window.PaystackPop.setup === 'function') {\n                resolve();\n                return;\n            }\n            /** @type {?} */\n            var script = window.document.createElement('script');\n            window.document.head.appendChild(script);\n            /** @type {?} */\n            var onLoadFunc = (/**\n             * @return {?}\n             */\n            function () {\n                script.removeEventListener('load', onLoadFunc);\n                resolve();\n            });\n            script.addEventListener('load', onLoadFunc);\n            script.setAttribute('src', 'https://js.paystack.co/v1/inline.js');\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    Angular4PaystackDirective.prototype.buttonClick = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isPaying) {\n                            return [2 /*return*/];\n                        }\n                        return [4 /*yield*/, this.loadScript()];\n                    case 1:\n                        _a.sent();\n                        this.pay();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Angular4PaystackDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[angular4-paystack]',\n                },] }\n    ];\n    /** @nocollapse */\n    Angular4PaystackDirective.ctorParameters = function () { return []; };\n    Angular4PaystackDirective.propDecorators = {\n        text: [{ type: Input }],\n        key: [{ type: Input }],\n        email: [{ type: Input }],\n        amount: [{ type: Input }],\n        metadata: [{ type: Input }],\n        ref: [{ type: Input }],\n        currency: [{ type: Input }],\n        plan: [{ type: Input }],\n        quantity: [{ type: Input }],\n        subaccount: [{ type: Input }],\n        channels: [{ type: Input }],\n        transaction_charge: [{ type: Input }],\n        bearer: [{ type: Input }],\n        class: [{ type: Input }],\n        style: [{ type: Input }],\n        close: [{ type: Output }],\n        callback: [{ type: Output }],\n        buttonClick: [{ type: HostListener, args: ['click',] }]\n    };\n    return Angular4PaystackDirective;\n}());\nif (false) {\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.text;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.key;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.email;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.amount;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.metadata;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.ref;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.currency;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.plan;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.quantity;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.subaccount;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.channels;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.transaction_charge;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.bearer;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.class;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.style;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.close;\n    /** @type {?} */\n    Angular4PaystackDirective.prototype.callback;\n    /**\n     * @type {?}\n     * @private\n     */\n    Angular4PaystackDirective.prototype.paystackOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    Angular4PaystackDirective.prototype.isPaying;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction MyWindow$2() { }\nif (false) {\n    /** @type {?} */\n    MyWindow$2.prototype.PaystackPop;\n}\nvar Angular4PaystackEmbed = /** @class */ (function () {\n    function Angular4PaystackEmbed() {\n        this.paymentInit = new EventEmitter();\n        this.close = new EventEmitter();\n        this.callback = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    Angular4PaystackEmbed.prototype.pay = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.checkInput()) {\n            return;\n        }\n        this.setUp();\n        if (this.paymentInit.observers.length) {\n            this.paymentInit.emit();\n        }\n        window.PaystackPop.setup(this.paystackOptions);\n    };\n    /**\n     * @return {?}\n     */\n    Angular4PaystackEmbed.prototype.checkInput = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.key) {\n            return console.error('ANGULAR-PAYSTACK: Paystack key cannot be empty');\n        }\n        if (!this.email) {\n            return console.error('ANGULAR-PAYSTACK: Paystack email cannot be empty');\n        }\n        if (!this.amount) {\n            return console.error('ANGULAR-PAYSTACK: Paystack amount cannot be empty');\n        }\n        if (!this.ref) {\n            return console.error('ANGULAR-PAYSTACK: Paystack ref cannot be empty');\n        }\n        if (!this.callback.observers.length) {\n            return console.error(\"\\n        ANGULAR-PAYSTACK: Insert a callback output like so (callback)='PaymentComplete($event)' to check payment status\\n      \");\n        }\n        return true;\n    };\n    /**\n     * @return {?}\n     */\n    Angular4PaystackEmbed.prototype.setUp = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.paystackOptions = {\n            container: 'paystackEmbedContainer',\n            key: this.key,\n            email: this.email,\n            amount: this.amount,\n            ref: this.ref,\n            metadata: this.metadata || {},\n            currency: this.currency || 'NGN',\n            plan: this.plan || '',\n            quantity: this.quantity || '',\n            subaccount: this.subaccount || '',\n            channels: this.channels,\n            transaction_charge: this.transaction_charge || 0,\n            bearer: this.bearer || '',\n            callback: (/**\n             * @param {?} res\n             * @return {?}\n             */\n            function (res) { return _this.callback.emit(res); }),\n            onClose: (/**\n             * @return {?}\n             */\n            function () { return _this.close && _this.close.emit(); }),\n        };\n    };\n    /**\n     * @return {?}\n     */\n    Angular4PaystackEmbed.prototype.loadScript = /**\n     * @return {?}\n     */\n    function () {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        function (resolve) {\n            if (window.PaystackPop && typeof window.PaystackPop.setup === 'function') {\n                resolve();\n                return;\n            }\n            /** @type {?} */\n            var script = window.document.createElement('script');\n            window.document.head.appendChild(script);\n            /** @type {?} */\n            var onLoadFunc = (/**\n             * @return {?}\n             */\n            function () {\n                script.removeEventListener('load', onLoadFunc);\n                resolve();\n            });\n            script.addEventListener('load', onLoadFunc);\n            script.setAttribute('src', 'https://js.paystack.co/v1/inline.js');\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    Angular4PaystackEmbed.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.loadScript()];\n                    case 1:\n                        _a.sent();\n                        if (this.text) {\n                            console.error('ANGULAR-PAYSTACK: Paystack Text input is deprecated. Use this instead <angular4-paystack>Pay With Paystack</angular4-paystack>');\n                        }\n                        this.pay();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Angular4PaystackEmbed.decorators = [\n        { type: Component, args: [{\n                    selector: 'angular4-paystack-embed',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: \"<div id=\\\"paystackEmbedContainer\\\"></div>\"\n                }] }\n    ];\n    /** @nocollapse */\n    Angular4PaystackEmbed.ctorParameters = function () { return []; };\n    Angular4PaystackEmbed.propDecorators = {\n        text: [{ type: Input }],\n        key: [{ type: Input }],\n        email: [{ type: Input }],\n        amount: [{ type: Input }],\n        metadata: [{ type: Input }],\n        channels: [{ type: Input }],\n        ref: [{ type: Input }],\n        currency: [{ type: Input }],\n        plan: [{ type: Input }],\n        quantity: [{ type: Input }],\n        subaccount: [{ type: Input }],\n        transaction_charge: [{ type: Input }],\n        bearer: [{ type: Input }],\n        paymentInit: [{ type: Output }],\n        close: [{ type: Output }],\n        callback: [{ type: Output }]\n    };\n    return Angular4PaystackEmbed;\n}());\nif (false) {\n    /** @type {?} */\n    Angular4PaystackEmbed.prototype.text;\n    /** @type {?} */\n    Angular4PaystackEmbed.prototype.key;\n    /** @type {?} */\n    Angular4PaystackEmbed.prototype.email;\n    /** @type {?} */\n    Angular4PaystackEmbed.prototype.amount;\n    /** @type {?} */\n    Angular4PaystackEmbed.prototype.metadata;\n    /** @type {?} */\n    Angular4PaystackEmbed.prototype.channels;\n    /** @type {?} */\n    Angular4PaystackEmbed.prototype.ref;\n    /** @type {?} */\n    Angular4PaystackEmbed.prototype.currency;\n    /** @type {?} */\n    Angular4PaystackEmbed.prototype.plan;\n    /** @type {?} */\n    Angular4PaystackEmbed.prototype.quantity;\n    /** @type {?} */\n    Angular4PaystackEmbed.prototype.subaccount;\n    /** @type {?} */\n    Angular4PaystackEmbed.prototype.transaction_charge;\n    /** @type {?} */\n    Angular4PaystackEmbed.prototype.bearer;\n    /** @type {?} */\n    Angular4PaystackEmbed.prototype.paymentInit;\n    /** @type {?} */\n    Angular4PaystackEmbed.prototype.close;\n    /** @type {?} */\n    Angular4PaystackEmbed.prototype.callback;\n    /**\n     * @type {?}\n     * @private\n     */\n    Angular4PaystackEmbed.prototype.paystackOptions;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar Angular4PaystackModule = /** @class */ (function () {\n    function Angular4PaystackModule() {\n    }\n    Angular4PaystackModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    exports: [Angular4PaystackComponent, Angular4PaystackDirective, Angular4PaystackEmbed],\n                    declarations: [Angular4PaystackComponent, Angular4PaystackDirective, Angular4PaystackEmbed],\n                    providers: [],\n                },] }\n    ];\n    return Angular4PaystackModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Angular4PaystackComponent, Angular4PaystackDirective, Angular4PaystackEmbed, Angular4PaystackModule };\n//# sourceMappingURL=angular4-paystack.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular4-paystack/fesm5/angular4-paystack.js\n// module id = 738\n// module chunks = 1"],"sourceRoot":""}