{"version":3,"sources":["../../src/pages/payment-plantype-edit/payment-plantype-edit.module.ts","../../src/pages/payment-plantype-edit/payment-plantype-edit.ts","../../src/interfaces/Plantypes.ts"],"names":[],"mappings":"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","file":"14.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { PaymentPlantypeEditPage } from './payment-plantype-edit';\n\n@NgModule({\n  declarations: [\n    PaymentPlantypeEditPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(PaymentPlantypeEditPage),\n  ],\n})\nexport class PaymentPlantypeEditPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/payment-plantype-edit/payment-plantype-edit.module.ts","import { PaymentsProvider } from './../../providers/payments/payments';\nimport { AuthenicationProvider } from './../../providers/authenication/authenication';\nimport { Plantypes } from './../../interfaces/Plantypes';\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController } from 'ionic-angular';\n\n@IonicPage()\n@Component({\n  selector: 'page-payment-plantype-edit',\n  templateUrl: 'payment-plantype-edit.html',\n})\nexport class PaymentPlantypeEditPage {\n  plantypes: any;\n  plantype: Plantypes = new Plantypes(\"\", \"\", \"\");\n  constructor(public navCtrl: NavController,\n    private loadingCtrl: LoadingController,\n    private authProvider: AuthenicationProvider,\n    private paymentsProvider: PaymentsProvider,\n    public navParams: NavParams) {\n    this.plantypes = this.navParams.get(\"plantype\");\n    if (this.plantype) {\n      this.plantype = this.plantypes;\n    }\n  }\n\n\n  onSubmit(plantype) {\n    let loading = this.loadingCtrl.create({\n      content: \"Please wait...\"\n    });\n    console.log(plantype);\n    if (plantype.name) {\n      if (plantype.amount) {\n        loading.present();\n        this.paymentsProvider.updatePlantype(plantype).subscribe(res => {\n          loading.dismiss().catch(() => { });\n          if (res.statusCode === 200) {\n            this.navCtrl.pop();\n          } else {\n            this.authProvider.showToast(res.description);\n          }\n        }, error => {\n          loading.dismiss().catch(() => { });\n          this.authProvider.showToast(error.error.error);\n        });\n      } else {\n        this.authProvider.showToast(\"Amount input field is empty\");\n      }\n    } else {\n      this.authProvider.showToast(\"Name input field is empty\");\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/payment-plantype-edit/payment-plantype-edit.ts","\n\nexport class Plantypes {\n\n  constructor(\n    public name: string,\n    public id: string,\n    public amount: string,\n  ) { }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/interfaces/Plantypes.ts"],"sourceRoot":""}